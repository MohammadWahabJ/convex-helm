apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{.Release.Name }}-backend
  namespace: convex
spec:
  serviceName: "{{.Release.Name }}-backend-headless"
  replicas: {{.Values.replicaCount }}
  selector:
    matchLabels:
      app: {{.Release.Name }}-backend
  template:
    metadata:
      labels:
        app: {{.Release.Name }}-backend
    spec:
      containers:
      - name: convex-backend
        image: "{{.Values.backend.image.repository }}:{{.Values.backend.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{.Values.backend.image.pullPolicy }}
        ports:
        - containerPort: 3210
          name: api
        - containerPort: 3211
          name: http-actions
        # env:
        # {{- /* If postgres is enabled, mount the database URL from the specified secret */}}
        # {{- if .Values.postgres.enabled }}
        # - name: DATABASE_URL 
        #   valueFrom:
        #     secretKeyRef:
        #       name: {{ .Values.postgres.existingSecret }}
        #       key: {{ .Values.postgres.secretKey }}
        # {{- end }}
        envFrom:
        {{- /* If postgres is enabled, mount all keys from the secret as env vars */}}
        {{- if .Values.postgres.enabled }}
        - secretRef:
            name: {{ .Values.postgres.existingSecret }}
        {{- end }}
        - secretRef:
            name: {{.Values.backend.secretsName }}
            optional: true  

        - configMapRef:
            name: {{.Release.Name }}-config
        volumeMounts:
        - name: data
          mountPath: /convex/data
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: {{.Release.Name }}-backend-pvc