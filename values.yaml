# values.yaml

# -- Global settings for the release
replicaCount: 1

# -- Configuration for the Convex Backend
backend:
  image:
    repository: ghcr.io/get-convex/convex-backend
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "latest"
  
  # -- Reference to the Kubernetes secret containing admin keys
  secretsName: convex-secrets

  # -- Configuration for the backend's persistent storage
  persistence:
    enabled: true
    storageClassName: "longhorn-standard"
    accessMode: ReadWriteOnce
    size: 5Gi

# -- PostgreSQL database configuration
# If enabled, the backend will use an external PostgreSQL database.
# The connection URL should be stored in a Kubernetes secret.
postgres:
  # -- Set to true to use an external PostgreSQL database
  enabled: false
  # -- The name of the existing secret that contains the database URL
  existingSecret: "convex-postgres-secret"
  # -- The key within the secret that holds the full database connection URL
  secretKey: "DATABASE_URL"


# -- Configuration for the Convex Dashboard
dashboard:
  image:
    repository: ghcr.io/get-convex/convex-dashboard
    pullPolicy: IfNotPresent
    tag: "latest"

# -- Service configurations
service:
  # -- Configuration for the main backend service
  backend:
    type: ClusterIP
    port: 3210
    actionsPort: 3211
  
  # -- Configuration for the dashboard service
  dashboard:
    type: ClusterIP
    port: 80
    targetPort: 6791

# -- Central configuration for Convex environment variables
convexConfig:
  cloudOrigin: "http://localhost:3210"
  siteOrigin: "http://localhost:3211"
  deploymentUrl: "http://localhost:3210"
  requireSsl: "true"




# -- Ingress configuration for exposing services publicly
ingress:
  # -- Enable or disable the creation of Ingress resources
  enabled: false

  # -- The Ingress Class to use. Varies by cluster setup (e.g., "nginx", "traefik")
  className: "nginx"

  # -- Annotations for the Ingress controller and cert-manager
  # These are critical for automatic TLS certificate provisioning.
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod

  # -- Hostname configuration for the Convex Dashboard
  dashboard:
    host: dashboard.convex.ki2.at
    paths:
      - path: /
        pathType: Prefix

  # -- Hostname configuration for the Convex Backend API
  backend:
    host: api.convex.ki2.at
    paths:
      - path: /
        pathType: Prefix
  
  # -- (Optional) Hostname for HTTP Actions. Defaults to the dashboard host if not set.
  # site:
  #   host: site.convex.ki2.at
  #   paths:
  #     - path: /
  #       pathType: Prefix

  # -- TLS configuration. Cert-manager will automatically create secrets with these names.
  tls:
    - secretName: convex-dashboard-tls
      hosts:
        - dashboard.convex.ki2.at
    - secretName: convex-api-tls
      hosts:
        - api.convex.ki2.at
    # - secretName: convex-site-tls
    #   hosts:
    #     - site.convex.ki2.at